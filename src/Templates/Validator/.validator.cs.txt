using EvermoonSuite.Application.Features.{nameofPlural}.DTOs;
namespace {namespace};

    public class {itemname}Validator : AbstractValidator<{itemname}Dto>
    {
        public {itemname}Validator()
        {
           // TODO: Implement Validator method, for example: 
           // RuleFor(v => v.Name)
           //      .MaximumLength(256)
           //      .NotEmpty();
           throw new System.NotImplementedException();
        }
        public Func<object, string, Task<IEnumerable<string>>> ValidateValue => async (model, propertyName) =>
     {
        var result = await ValidateAsync(ValidationContext<{itemname}Dto>.CreateWithOptions(({itemname}Dto)model, x => x.IncludeProperties(propertyName)));
        if (result.IsValid)
            return Array.Empty<string>();
        return result.Errors.Select(e => e.ErrorMessage);
     };
    }